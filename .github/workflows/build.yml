name: build
on:
  push:
    branches:
      - "**"
  pull_request:
jobs:
  extract:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build
        run: make build

      - name: Upload ISO
        uses: actions/upload-artifact@v2
        with:
          name: virtio-win.iso
          path: docker/build/virtio-win.iso
          retention-days: 7

      - name: Upload VERSION.txt
        uses: actions/upload-artifact@v2
        with:
          name: VERSION.txt
          path: docker/build/VERSION.txt
          retention-days: 7

      - name: Files
        run: |
          ls -alh docker/build/
          cat docker/build/VERSION.txt

  verify:
    runs-on: windows-latest
    defaults:
      run:
        shell: powershell
    needs:
      - extract
    steps:
      - uses: actions/checkout@v2

      - name: Download ISO
        uses: actions/download-artifact@v2
        with:
          name: virtio-win.iso

      - name: Mount ISO
        run: |
          Write-Host "Mounting ISO Image"

          Mount-DiskImage -StorageType ISO -ImagePath ${env:GITHUB_WORKSPACE}\virtio-win.iso
          Get-DiskImage ${env:GITHUB_WORKSPACE}\virtio-win.iso | Get-Volume

      - name: Get Mountpoint
        run: |
          Write-Host "Export Drive Letter"
          $IsoMountDriveLetter = (Get-DiskImage ${env:GITHUB_WORKSPACE}\virtio-win.iso | Get-Volume).DriveLetter
          echo "ISO_MOUNTPOINT=$IsoMountDriveLetter" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Verify ballon driver
        run: tools\signtool.exe verify /pa /v /c ${env:ISO_MOUNTPOINT}:\Balloon\w10\amd64\balloon.cat ${env:ISO_MOUNTPOINT}:\Balloon\w10\amd64\balloon.sys

      - name: Verify vioscsi driver
        run: tools\signtool.exe verify /pa /v /c ${env:ISO_MOUNTPOINT}:\vioscsi\w10\amd64\vioscsi.cat ${env:ISO_MOUNTPOINT}:\vioscsi\w10\amd64\vioscsi.sys

  # Release if current latest tag differes from downloaded one
  # Do only if on master branch
  release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    permissions:
      contents: write
    needs:
      - extract
      - verify
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Download ISO
        uses: actions/download-artifact@v2
        with:
          path: docker/build/
          name: virtio-win.iso

      - name: Download VERSION.txt
        uses: actions/download-artifact@v2
        with:
          path: docker/build/
          name: VERSION.txt

      - name: Install git-chglog
        run: |
          brew tap git-chglog/git-chglog
          brew install git-chglog

      - name: Release if necessary
        run: |
          ls -alh docker/build
          ls -alh docker/build/VERSION.txt
          ls -alh docker/build/virtio-win.iso
          ./tools/release.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
