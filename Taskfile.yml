# SPDX-FileCopyrightText: Copyright 2023 Prasad Tengse
# SPDX-License-Identifier: MIT

version: "3"

dotenv:
  - ".env"
  - "{{.TASKFILE_DIR}}/.env"

vars:
  DOCKER_IMAGE_RHEL: registry.access.redhat.com/ubi9/ubi:latest
  DOCKER_IMAGE_FEDORA: quay.io/fedora/fedora:latest

tasks:
  default:
    desc: "Show a list of available tasks"
    cmds:
      - cmd: task --list
        silent: true

  register-subscription:
    desc: "Register RHEL subscription"
    cmds:
      - for:
          - "build/rhel/secrets/consumer"
          - "build/rhel/secrets/entitlement"
          - "build/rhel/cache"
        cmd: mkdir -p {{ .ITEM }}
      - cmd: |
          docker run --rm \
            --env SMDEV_CONTAINER_OFF=true \
            --mount="type=bind,src={{.TASKFILE_DIR}}/build/rhel/secrets/entitlement,dst=/etc/pki/entitlement" \
            --mount="type=bind,src={{.TASKFILE_DIR}}/build/rhel/secrets/consumer,dst=/etc/pki/consumer" \
            {{.DOCKER_IMAGE_RHEL}} \
            bash -c 'rm -f /etc/rhsm-host && subscription-manager register --org {{.REDHAT_ORG}} --activationkey {{.REDHAT_ACTIVATION_KEY}}'
    status:
      - test -f build/rhel/secrets/consumer/cert.pem
      - test -f build/rhel/secrets/consumer/key.pem
    requires:
      vars:
        - REDHAT_ORG
        - REDHAT_ACTIVATION_KEY

  unregister-subscription:
    desc: "Unregister RHEL subscription"
    cmds:
      - cmd: |
          docker run --rm \
            --env SMDEV_CONTAINER_OFF=true \
            --mount="type=bind,src={{.TASKFILE_DIR}}/build/rhel/secrets/entitlement,dst=/etc/pki/entitlement" \
            --mount="type=bind,src={{.TASKFILE_DIR}}/build/rhel/secrets/consumer,dst=/etc/pki/consumer" \
            --init \
            {{.DOCKER_IMAGE_RHEL}} \
            bash -c 'rm -f /etc/rhsm-host && subscription-manager unregister'

  build-rhel:
    desc: "Download and extract virtio-win from RHEL"
    preconditions:
      - test -f build/rhel/secrets/consumer/cert.pem
      - test -f build/rhel/secrets/consumer/key.pem
    cmds:
      - cmd: mkdir -p build/rhel/cache
      - cmd: |
          docker run --rm \
            --env SMDEV_CONTAINER_OFF=true \
            --mount="type=bind,src={{.TASKFILE_DIR}}/build/rhel/secrets/entitlement,dst=/etc/pki/entitlement" \
            --mount="type=bind,src={{.TASKFILE_DIR}}/build/rhel/secrets/consumer,dst=/etc/pki/consumer" \
            --mount="type=bind,src={{.TASKFILE_DIR}}/build/rhel/cache,dst=/var/cache/dnf" \
            --mount="type=bind,src={{.TASKFILE_DIR}}/build/rhel,dst=/build" \
            --init \
            {{.DOCKER_IMAGE_RHEL}} \
            bash -c 'dnf install --best -y --setopt=keepcache=true virtio-win && dnf repoquery --quiet --installed --cacheonly --qf "%{version}-%{release}" virtio-win > /build/VERSION.txt && echo "Copying files to host" && cp /usr/share/virtio-win/virtio-win.iso /build/virtio-win.iso'

  build-fedora:
    desc: "Download and extract virtio-win from Fedora"
    cmds:
      - cmd: mkdir -p "build/fedora/cache"
      - cmd: |
          docker run --rm \
            --mount="type=bind,src={{.TASKFILE_DIR}}/build/fedora/cache,dst=/var/cache/dnf" \
            --mount="type=bind,src={{.TASKFILE_DIR}}/build/fedora,dst=/build" \
            --init \
            {{.DOCKER_IMAGE_FEDORA}} \
            bash -c 'printf "Adding Repo\n" && curl -sSfL https://fedorapeople.org/groups/virt/virtio-win/virtio-win.repo -o /etc/yum.repos.d/virtio-win.repo && printf "Download ISO\n" && dnf install --best -y --setopt=keepcache=true virtio-win && dnf repoquery --quiet --installed --cacheonly --qf "%{version}-%{release}" virtio-win > /build/VERSION.txt && echo "Copying files to host" && cp /usr/share/virtio-win/virtio-win.iso /build/virtio-win.iso'

  clean-creds:
    desc: "Cleanup RedHat Manager credentials"
    aliases:
      - "clean-credentials"
    cmds:
      - cmd: rm -f secrets/consumer/*.pem
      - cmd: rm -f secrets/entitlement/*.pem

  clean:
    desc: "Cleanup build artifacts and cache"
    cmds:
      - for:
          - "*.iso"
          - "*.exe"
          - "VERSION"
          - "VERSION.txt"
        cmd: rm -f {{.TASKFILE_DIR}}/build/{{.ITEM}}
      - cmd: rm -rf {{.TASKFILE_DIR}}/build/cache
